// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InformationalMessageContents_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InformationalMessageContents_CollectionInformationRecord_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InformationalMessageContents_CollectionInformationRecord_CreationRateData_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyspaceMessageContents_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
class InformationalMessageContents_CollectionInformationRecord_CreationRateDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InformationalMessageContents_CollectionInformationRecord_CreationRateData> _instance;
} _InformationalMessageContents_CollectionInformationRecord_CreationRateData_default_instance_;
class InformationalMessageContents_CollectionInformationRecordDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InformationalMessageContents_CollectionInformationRecord> _instance;
} _InformationalMessageContents_CollectionInformationRecord_default_instance_;
class InformationalMessageContentsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InformationalMessageContents> _instance;
} _InformationalMessageContents_default_instance_;
class KeyspaceMessageContents_KeyspaceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeyspaceMessageContents_Keyspace> _instance;
} _KeyspaceMessageContents_Keyspace_default_instance_;
class KeyspaceMessageContentsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeyspaceMessageContents> _instance;
} _KeyspaceMessageContents_default_instance_;
class MessageInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageInfo> _instance;
  const ::InformationalMessageContents* info_;
  const ::KeyspaceMessageContents* keyspace_;
} _MessageInfo_default_instance_;
static void InitDefaultsscc_info_InformationalMessageContents_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InformationalMessageContents_default_instance_;
    new (ptr) ::InformationalMessageContents();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InformationalMessageContents::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InformationalMessageContents_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InformationalMessageContents_message_2eproto}, {
      &scc_info_InformationalMessageContents_CollectionInformationRecord_message_2eproto.base,}};

static void InitDefaultsscc_info_InformationalMessageContents_CollectionInformationRecord_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InformationalMessageContents_CollectionInformationRecord_default_instance_;
    new (ptr) ::InformationalMessageContents_CollectionInformationRecord();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InformationalMessageContents_CollectionInformationRecord::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InformationalMessageContents_CollectionInformationRecord_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InformationalMessageContents_CollectionInformationRecord_message_2eproto}, {
      &scc_info_InformationalMessageContents_CollectionInformationRecord_CreationRateData_message_2eproto.base,}};

static void InitDefaultsscc_info_InformationalMessageContents_CollectionInformationRecord_CreationRateData_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InformationalMessageContents_CollectionInformationRecord_CreationRateData_default_instance_;
    new (ptr) ::InformationalMessageContents_CollectionInformationRecord_CreationRateData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InformationalMessageContents_CollectionInformationRecord_CreationRateData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InformationalMessageContents_CollectionInformationRecord_CreationRateData_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InformationalMessageContents_CollectionInformationRecord_CreationRateData_message_2eproto}, {}};

static void InitDefaultsscc_info_KeyspaceMessageContents_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyspaceMessageContents_default_instance_;
    new (ptr) ::KeyspaceMessageContents();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyspaceMessageContents::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyspaceMessageContents_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_KeyspaceMessageContents_message_2eproto}, {}};

static void InitDefaultsscc_info_KeyspaceMessageContents_Keyspace_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyspaceMessageContents_Keyspace_default_instance_;
    new (ptr) ::KeyspaceMessageContents_Keyspace();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyspaceMessageContents_Keyspace::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyspaceMessageContents_Keyspace_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_KeyspaceMessageContents_Keyspace_message_2eproto}, {}};

static void InitDefaultsscc_info_MessageInfo_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MessageInfo_default_instance_;
    new (ptr) ::MessageInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_MessageInfo_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_MessageInfo_message_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_InformationalMessageContents_message_2eproto.base,
      &scc_info_KeyspaceMessageContents_message_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_message_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_message_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_message_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InformationalMessageContents_CollectionInformationRecord_CreationRateData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InformationalMessageContents_CollectionInformationRecord_CreationRateData, shortallocationratio_),
  PROTOBUF_FIELD_OFFSET(::InformationalMessageContents_CollectionInformationRecord_CreationRateData, longallocationratio_),
  PROTOBUF_FIELD_OFFSET(::InformationalMessageContents_CollectionInformationRecord_CreationRateData, createdpreviousday_),
  PROTOBUF_FIELD_OFFSET(::InformationalMessageContents_CollectionInformationRecord_CreationRateData, createdpreviousweek_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InformationalMessageContents_CollectionInformationRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InformationalMessageContents_CollectionInformationRecord, collectionname_),
  PROTOBUF_FIELD_OFFSET(::InformationalMessageContents_CollectionInformationRecord, creationratedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InformationalMessageContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InformationalMessageContents, records_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KeyspaceMessageContents_Keyspace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KeyspaceMessageContents_Keyspace, name_),
  PROTOBUF_FIELD_OFFSET(::KeyspaceMessageContents_Keyspace, startid_),
  PROTOBUF_FIELD_OFFSET(::KeyspaceMessageContents_Keyspace, endid_),
  PROTOBUF_FIELD_OFFSET(::KeyspaceMessageContents_Keyspace, suffixbits_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KeyspaceMessageContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MessageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::MessageInfo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MessageInfo, sourcenodeid_),
  PROTOBUF_FIELD_OFFSET(::MessageInfo, destnodeid_),
  PROTOBUF_FIELD_OFFSET(::MessageInfo, lastreceivedmsg_),
  PROTOBUF_FIELD_OFFSET(::MessageInfo, channelstate_),
  PROTOBUF_FIELD_OFFSET(::MessageInfo, timestamp_),
  PROTOBUF_FIELD_OFFSET(::MessageInfo, messageid_),
  PROTOBUF_FIELD_OFFSET(::MessageInfo, messagetype_),
  offsetof(::MessageInfoDefaultTypeInternal, info_),
  offsetof(::MessageInfoDefaultTypeInternal, keyspace_),
  PROTOBUF_FIELD_OFFSET(::MessageInfo, message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::InformationalMessageContents_CollectionInformationRecord_CreationRateData)},
  { 9, -1, sizeof(::InformationalMessageContents_CollectionInformationRecord)},
  { 16, -1, sizeof(::InformationalMessageContents)},
  { 22, -1, sizeof(::KeyspaceMessageContents_Keyspace)},
  { 31, -1, sizeof(::KeyspaceMessageContents)},
  { 36, -1, sizeof(::MessageInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_InformationalMessageContents_CollectionInformationRecord_CreationRateData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_InformationalMessageContents_CollectionInformationRecord_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_InformationalMessageContents_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_KeyspaceMessageContents_Keyspace_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_KeyspaceMessageContents_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MessageInfo_default_instance_),
};

const char descriptor_table_protodef_message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmessage.proto\032\037google/protobuf/timesta"
  "mp.proto\"\221\003\n\034InformationalMessageContent"
  "s\022J\n\007records\030\001 \003(\01329.InformationalMessag"
  "eContents.CollectionInformationRecord\032\244\002"
  "\n\033CollectionInformationRecord\022\026\n\016collect"
  "ionName\030\001 \001(\t\022d\n\020creationRateData\030\002 \001(\0132"
  "J.InformationalMessageContents.Collectio"
  "nInformationRecord.CreationRateData\032\206\001\n\020"
  "CreationRateData\022\034\n\024shortAllocationRatio"
  "\030\001 \001(\002\022\033\n\023longAllocationRatio\030\002 \001(\002\022\032\n\022c"
  "reatedPreviousDay\030\003 \001(\002\022\033\n\023createdPrevio"
  "usWeek\030\004 \001(\002\"g\n\027KeyspaceMessageContents\032"
  "L\n\010Keyspace\022\014\n\004name\030\001 \001(\t\022\017\n\007startID\030\002 \001"
  "(\r\022\r\n\005endID\030\003 \001(\r\022\022\n\nsuffixBits\030\004 \001(\r\"\372\003"
  "\n\013MessageInfo\022\024\n\014sourceNodeID\030\001 \001(\014\022\022\n\nd"
  "estNodeID\030\002 \001(\014\022\027\n\017lastReceivedMsg\030\003 \001(\r"
  "\022/\n\014channelState\030\004 \001(\0162\031.MessageInfo.Cha"
  "nnelState\022-\n\ttimestamp\030\005 \001(\0132\032.google.pr"
  "otobuf.Timestamp\022\021\n\tmessageID\030\006 \001(\022\022-\n\013m"
  "essageType\030\007 \001(\0162\030.MessageInfo.MessageTy"
  "pe\022-\n\004info\030\010 \001(\0132\035.InformationalMessageC"
  "ontentsH\000\022,\n\010keyspace\030\t \001(\0132\030.KeyspaceMe"
  "ssageContentsH\000\"S\n\014ChannelState\022\023\n\017INITI"
  "AL_STARTUP\020\000\022\030\n\024NORMAL_COMMUNICATION\020\001\022\024"
  "\n\020CHANNEL_SHUTDOWN\020\002\"I\n\013MessageType\022\017\n\013I"
  "NFORMATION\020\000\022\014\n\010KEYSPACE\020\001\022\033\n\027DATA_REPLI"
  "CATION_UNUSED\020\002B\t\n\007messageb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_message_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_message_2eproto_sccs[6] = {
  &scc_info_InformationalMessageContents_message_2eproto.base,
  &scc_info_InformationalMessageContents_CollectionInformationRecord_message_2eproto.base,
  &scc_info_InformationalMessageContents_CollectionInformationRecord_CreationRateData_message_2eproto.base,
  &scc_info_KeyspaceMessageContents_message_2eproto.base,
  &scc_info_KeyspaceMessageContents_Keyspace_message_2eproto.base,
  &scc_info_MessageInfo_message_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_message_2eproto_once;
static bool descriptor_table_message_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_2eproto = {
  &descriptor_table_message_2eproto_initialized, descriptor_table_protodef_message_2eproto, "message.proto", 1074,
  &descriptor_table_message_2eproto_once, descriptor_table_message_2eproto_sccs, descriptor_table_message_2eproto_deps, 6, 1,
  schemas, file_default_instances, TableStruct_message_2eproto::offsets,
  file_level_metadata_message_2eproto, 6, file_level_enum_descriptors_message_2eproto, file_level_service_descriptors_message_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_message_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_message_2eproto), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageInfo_ChannelState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_message_2eproto);
  return file_level_enum_descriptors_message_2eproto[0];
}
bool MessageInfo_ChannelState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr MessageInfo_ChannelState MessageInfo::INITIAL_STARTUP;
constexpr MessageInfo_ChannelState MessageInfo::NORMAL_COMMUNICATION;
constexpr MessageInfo_ChannelState MessageInfo::CHANNEL_SHUTDOWN;
constexpr MessageInfo_ChannelState MessageInfo::ChannelState_MIN;
constexpr MessageInfo_ChannelState MessageInfo::ChannelState_MAX;
constexpr int MessageInfo::ChannelState_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageInfo_MessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_message_2eproto);
  return file_level_enum_descriptors_message_2eproto[1];
}
bool MessageInfo_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr MessageInfo_MessageType MessageInfo::INFORMATION;
constexpr MessageInfo_MessageType MessageInfo::KEYSPACE;
constexpr MessageInfo_MessageType MessageInfo::DATA_REPLICATION_UNUSED;
constexpr MessageInfo_MessageType MessageInfo::MessageType_MIN;
constexpr MessageInfo_MessageType MessageInfo::MessageType_MAX;
constexpr int MessageInfo::MessageType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void InformationalMessageContents_CollectionInformationRecord_CreationRateData::InitAsDefaultInstance() {
}
class InformationalMessageContents_CollectionInformationRecord_CreationRateData::_Internal {
 public:
};

InformationalMessageContents_CollectionInformationRecord_CreationRateData::InformationalMessageContents_CollectionInformationRecord_CreationRateData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
}
InformationalMessageContents_CollectionInformationRecord_CreationRateData::InformationalMessageContents_CollectionInformationRecord_CreationRateData(const InformationalMessageContents_CollectionInformationRecord_CreationRateData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shortallocationratio_, &from.shortallocationratio_,
    static_cast<size_t>(reinterpret_cast<char*>(&createdpreviousweek_) -
    reinterpret_cast<char*>(&shortallocationratio_)) + sizeof(createdpreviousweek_));
  // @@protoc_insertion_point(copy_constructor:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
}

void InformationalMessageContents_CollectionInformationRecord_CreationRateData::SharedCtor() {
  ::memset(&shortallocationratio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&createdpreviousweek_) -
      reinterpret_cast<char*>(&shortallocationratio_)) + sizeof(createdpreviousweek_));
}

InformationalMessageContents_CollectionInformationRecord_CreationRateData::~InformationalMessageContents_CollectionInformationRecord_CreationRateData() {
  // @@protoc_insertion_point(destructor:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
  SharedDtor();
}

void InformationalMessageContents_CollectionInformationRecord_CreationRateData::SharedDtor() {
}

void InformationalMessageContents_CollectionInformationRecord_CreationRateData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InformationalMessageContents_CollectionInformationRecord_CreationRateData& InformationalMessageContents_CollectionInformationRecord_CreationRateData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InformationalMessageContents_CollectionInformationRecord_CreationRateData_message_2eproto.base);
  return *internal_default_instance();
}


void InformationalMessageContents_CollectionInformationRecord_CreationRateData::Clear() {
// @@protoc_insertion_point(message_clear_start:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&shortallocationratio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&createdpreviousweek_) -
      reinterpret_cast<char*>(&shortallocationratio_)) + sizeof(createdpreviousweek_));
  _internal_metadata_.Clear();
}

const char* InformationalMessageContents_CollectionInformationRecord_CreationRateData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float shortAllocationRatio = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          shortallocationratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float longAllocationRatio = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          longallocationratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float createdPreviousDay = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          createdpreviousday_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float createdPreviousWeek = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          createdpreviousweek_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InformationalMessageContents_CollectionInformationRecord_CreationRateData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float shortAllocationRatio = 1;
  if (!(this->shortallocationratio() <= 0 && this->shortallocationratio() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_shortallocationratio(), target);
  }

  // float longAllocationRatio = 2;
  if (!(this->longallocationratio() <= 0 && this->longallocationratio() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_longallocationratio(), target);
  }

  // float createdPreviousDay = 3;
  if (!(this->createdpreviousday() <= 0 && this->createdpreviousday() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_createdpreviousday(), target);
  }

  // float createdPreviousWeek = 4;
  if (!(this->createdpreviousweek() <= 0 && this->createdpreviousweek() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_createdpreviousweek(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
  return target;
}

size_t InformationalMessageContents_CollectionInformationRecord_CreationRateData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float shortAllocationRatio = 1;
  if (!(this->shortallocationratio() <= 0 && this->shortallocationratio() >= 0)) {
    total_size += 1 + 4;
  }

  // float longAllocationRatio = 2;
  if (!(this->longallocationratio() <= 0 && this->longallocationratio() >= 0)) {
    total_size += 1 + 4;
  }

  // float createdPreviousDay = 3;
  if (!(this->createdpreviousday() <= 0 && this->createdpreviousday() >= 0)) {
    total_size += 1 + 4;
  }

  // float createdPreviousWeek = 4;
  if (!(this->createdpreviousweek() <= 0 && this->createdpreviousweek() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InformationalMessageContents_CollectionInformationRecord_CreationRateData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
  GOOGLE_DCHECK_NE(&from, this);
  const InformationalMessageContents_CollectionInformationRecord_CreationRateData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InformationalMessageContents_CollectionInformationRecord_CreationRateData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
    MergeFrom(*source);
  }
}

void InformationalMessageContents_CollectionInformationRecord_CreationRateData::MergeFrom(const InformationalMessageContents_CollectionInformationRecord_CreationRateData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.shortallocationratio() <= 0 && from.shortallocationratio() >= 0)) {
    _internal_set_shortallocationratio(from._internal_shortallocationratio());
  }
  if (!(from.longallocationratio() <= 0 && from.longallocationratio() >= 0)) {
    _internal_set_longallocationratio(from._internal_longallocationratio());
  }
  if (!(from.createdpreviousday() <= 0 && from.createdpreviousday() >= 0)) {
    _internal_set_createdpreviousday(from._internal_createdpreviousday());
  }
  if (!(from.createdpreviousweek() <= 0 && from.createdpreviousweek() >= 0)) {
    _internal_set_createdpreviousweek(from._internal_createdpreviousweek());
  }
}

void InformationalMessageContents_CollectionInformationRecord_CreationRateData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InformationalMessageContents_CollectionInformationRecord_CreationRateData::CopyFrom(const InformationalMessageContents_CollectionInformationRecord_CreationRateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InformationalMessageContents.CollectionInformationRecord.CreationRateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InformationalMessageContents_CollectionInformationRecord_CreationRateData::IsInitialized() const {
  return true;
}

void InformationalMessageContents_CollectionInformationRecord_CreationRateData::InternalSwap(InformationalMessageContents_CollectionInformationRecord_CreationRateData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(shortallocationratio_, other->shortallocationratio_);
  swap(longallocationratio_, other->longallocationratio_);
  swap(createdpreviousday_, other->createdpreviousday_);
  swap(createdpreviousweek_, other->createdpreviousweek_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InformationalMessageContents_CollectionInformationRecord_CreationRateData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InformationalMessageContents_CollectionInformationRecord::InitAsDefaultInstance() {
  ::_InformationalMessageContents_CollectionInformationRecord_default_instance_._instance.get_mutable()->creationratedata_ = const_cast< ::InformationalMessageContents_CollectionInformationRecord_CreationRateData*>(
      ::InformationalMessageContents_CollectionInformationRecord_CreationRateData::internal_default_instance());
}
class InformationalMessageContents_CollectionInformationRecord::_Internal {
 public:
  static const ::InformationalMessageContents_CollectionInformationRecord_CreationRateData& creationratedata(const InformationalMessageContents_CollectionInformationRecord* msg);
};

const ::InformationalMessageContents_CollectionInformationRecord_CreationRateData&
InformationalMessageContents_CollectionInformationRecord::_Internal::creationratedata(const InformationalMessageContents_CollectionInformationRecord* msg) {
  return *msg->creationratedata_;
}
InformationalMessageContents_CollectionInformationRecord::InformationalMessageContents_CollectionInformationRecord()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InformationalMessageContents.CollectionInformationRecord)
}
InformationalMessageContents_CollectionInformationRecord::InformationalMessageContents_CollectionInformationRecord(const InformationalMessageContents_CollectionInformationRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collectionname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collectionname().empty()) {
    collectionname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collectionname_);
  }
  if (from._internal_has_creationratedata()) {
    creationratedata_ = new ::InformationalMessageContents_CollectionInformationRecord_CreationRateData(*from.creationratedata_);
  } else {
    creationratedata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:InformationalMessageContents.CollectionInformationRecord)
}

void InformationalMessageContents_CollectionInformationRecord::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InformationalMessageContents_CollectionInformationRecord_message_2eproto.base);
  collectionname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  creationratedata_ = nullptr;
}

InformationalMessageContents_CollectionInformationRecord::~InformationalMessageContents_CollectionInformationRecord() {
  // @@protoc_insertion_point(destructor:InformationalMessageContents.CollectionInformationRecord)
  SharedDtor();
}

void InformationalMessageContents_CollectionInformationRecord::SharedDtor() {
  collectionname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete creationratedata_;
}

void InformationalMessageContents_CollectionInformationRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InformationalMessageContents_CollectionInformationRecord& InformationalMessageContents_CollectionInformationRecord::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InformationalMessageContents_CollectionInformationRecord_message_2eproto.base);
  return *internal_default_instance();
}


void InformationalMessageContents_CollectionInformationRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:InformationalMessageContents.CollectionInformationRecord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collectionname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && creationratedata_ != nullptr) {
    delete creationratedata_;
  }
  creationratedata_ = nullptr;
  _internal_metadata_.Clear();
}

const char* InformationalMessageContents_CollectionInformationRecord::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string collectionName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_collectionname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "InformationalMessageContents.CollectionInformationRecord.collectionName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .InformationalMessageContents.CollectionInformationRecord.CreationRateData creationRateData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_creationratedata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InformationalMessageContents_CollectionInformationRecord::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InformationalMessageContents.CollectionInformationRecord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collectionName = 1;
  if (this->collectionname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collectionname().data(), static_cast<int>(this->_internal_collectionname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "InformationalMessageContents.CollectionInformationRecord.collectionName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_collectionname(), target);
  }

  // .InformationalMessageContents.CollectionInformationRecord.CreationRateData creationRateData = 2;
  if (this->has_creationratedata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::creationratedata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InformationalMessageContents.CollectionInformationRecord)
  return target;
}

size_t InformationalMessageContents_CollectionInformationRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InformationalMessageContents.CollectionInformationRecord)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string collectionName = 1;
  if (this->collectionname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collectionname());
  }

  // .InformationalMessageContents.CollectionInformationRecord.CreationRateData creationRateData = 2;
  if (this->has_creationratedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *creationratedata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InformationalMessageContents_CollectionInformationRecord::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InformationalMessageContents.CollectionInformationRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const InformationalMessageContents_CollectionInformationRecord* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InformationalMessageContents_CollectionInformationRecord>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InformationalMessageContents.CollectionInformationRecord)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InformationalMessageContents.CollectionInformationRecord)
    MergeFrom(*source);
  }
}

void InformationalMessageContents_CollectionInformationRecord::MergeFrom(const InformationalMessageContents_CollectionInformationRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InformationalMessageContents.CollectionInformationRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.collectionname().size() > 0) {

    collectionname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collectionname_);
  }
  if (from.has_creationratedata()) {
    _internal_mutable_creationratedata()->::InformationalMessageContents_CollectionInformationRecord_CreationRateData::MergeFrom(from._internal_creationratedata());
  }
}

void InformationalMessageContents_CollectionInformationRecord::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InformationalMessageContents.CollectionInformationRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InformationalMessageContents_CollectionInformationRecord::CopyFrom(const InformationalMessageContents_CollectionInformationRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InformationalMessageContents.CollectionInformationRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InformationalMessageContents_CollectionInformationRecord::IsInitialized() const {
  return true;
}

void InformationalMessageContents_CollectionInformationRecord::InternalSwap(InformationalMessageContents_CollectionInformationRecord* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  collectionname_.Swap(&other->collectionname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(creationratedata_, other->creationratedata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InformationalMessageContents_CollectionInformationRecord::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InformationalMessageContents::InitAsDefaultInstance() {
}
class InformationalMessageContents::_Internal {
 public:
};

InformationalMessageContents::InformationalMessageContents()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InformationalMessageContents)
}
InformationalMessageContents::InformationalMessageContents(const InformationalMessageContents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      records_(from.records_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:InformationalMessageContents)
}

void InformationalMessageContents::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InformationalMessageContents_message_2eproto.base);
}

InformationalMessageContents::~InformationalMessageContents() {
  // @@protoc_insertion_point(destructor:InformationalMessageContents)
  SharedDtor();
}

void InformationalMessageContents::SharedDtor() {
}

void InformationalMessageContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InformationalMessageContents& InformationalMessageContents::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InformationalMessageContents_message_2eproto.base);
  return *internal_default_instance();
}


void InformationalMessageContents::Clear() {
// @@protoc_insertion_point(message_clear_start:InformationalMessageContents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  records_.Clear();
  _internal_metadata_.Clear();
}

const char* InformationalMessageContents::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .InformationalMessageContents.CollectionInformationRecord records = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_records(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InformationalMessageContents::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InformationalMessageContents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .InformationalMessageContents.CollectionInformationRecord records = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_records_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_records(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InformationalMessageContents)
  return target;
}

size_t InformationalMessageContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InformationalMessageContents)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .InformationalMessageContents.CollectionInformationRecord records = 1;
  total_size += 1UL * this->_internal_records_size();
  for (const auto& msg : this->records_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InformationalMessageContents::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InformationalMessageContents)
  GOOGLE_DCHECK_NE(&from, this);
  const InformationalMessageContents* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InformationalMessageContents>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InformationalMessageContents)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InformationalMessageContents)
    MergeFrom(*source);
  }
}

void InformationalMessageContents::MergeFrom(const InformationalMessageContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InformationalMessageContents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  records_.MergeFrom(from.records_);
}

void InformationalMessageContents::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InformationalMessageContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InformationalMessageContents::CopyFrom(const InformationalMessageContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InformationalMessageContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InformationalMessageContents::IsInitialized() const {
  return true;
}

void InformationalMessageContents::InternalSwap(InformationalMessageContents* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  records_.InternalSwap(&other->records_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InformationalMessageContents::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void KeyspaceMessageContents_Keyspace::InitAsDefaultInstance() {
}
class KeyspaceMessageContents_Keyspace::_Internal {
 public:
};

KeyspaceMessageContents_Keyspace::KeyspaceMessageContents_Keyspace()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyspaceMessageContents.Keyspace)
}
KeyspaceMessageContents_Keyspace::KeyspaceMessageContents_Keyspace(const KeyspaceMessageContents_Keyspace& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&startid_, &from.startid_,
    static_cast<size_t>(reinterpret_cast<char*>(&suffixbits_) -
    reinterpret_cast<char*>(&startid_)) + sizeof(suffixbits_));
  // @@protoc_insertion_point(copy_constructor:KeyspaceMessageContents.Keyspace)
}

void KeyspaceMessageContents_Keyspace::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_KeyspaceMessageContents_Keyspace_message_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&startid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suffixbits_) -
      reinterpret_cast<char*>(&startid_)) + sizeof(suffixbits_));
}

KeyspaceMessageContents_Keyspace::~KeyspaceMessageContents_Keyspace() {
  // @@protoc_insertion_point(destructor:KeyspaceMessageContents.Keyspace)
  SharedDtor();
}

void KeyspaceMessageContents_Keyspace::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void KeyspaceMessageContents_Keyspace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyspaceMessageContents_Keyspace& KeyspaceMessageContents_Keyspace::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeyspaceMessageContents_Keyspace_message_2eproto.base);
  return *internal_default_instance();
}


void KeyspaceMessageContents_Keyspace::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyspaceMessageContents.Keyspace)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&startid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suffixbits_) -
      reinterpret_cast<char*>(&startid_)) + sizeof(suffixbits_));
  _internal_metadata_.Clear();
}

const char* KeyspaceMessageContents_Keyspace::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "KeyspaceMessageContents.Keyspace.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 startID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          startid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 endID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          endid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 suffixBits = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          suffixbits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyspaceMessageContents_Keyspace::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KeyspaceMessageContents.Keyspace)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "KeyspaceMessageContents.Keyspace.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint32 startID = 2;
  if (this->startid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_startid(), target);
  }

  // uint32 endID = 3;
  if (this->endid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_endid(), target);
  }

  // uint32 suffixBits = 4;
  if (this->suffixbits() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_suffixbits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyspaceMessageContents.Keyspace)
  return target;
}

size_t KeyspaceMessageContents_Keyspace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyspaceMessageContents.Keyspace)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 startID = 2;
  if (this->startid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_startid());
  }

  // uint32 endID = 3;
  if (this->endid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_endid());
  }

  // uint32 suffixBits = 4;
  if (this->suffixbits() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_suffixbits());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyspaceMessageContents_Keyspace::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyspaceMessageContents.Keyspace)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyspaceMessageContents_Keyspace* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyspaceMessageContents_Keyspace>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyspaceMessageContents.Keyspace)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyspaceMessageContents.Keyspace)
    MergeFrom(*source);
  }
}

void KeyspaceMessageContents_Keyspace::MergeFrom(const KeyspaceMessageContents_Keyspace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyspaceMessageContents.Keyspace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.startid() != 0) {
    _internal_set_startid(from._internal_startid());
  }
  if (from.endid() != 0) {
    _internal_set_endid(from._internal_endid());
  }
  if (from.suffixbits() != 0) {
    _internal_set_suffixbits(from._internal_suffixbits());
  }
}

void KeyspaceMessageContents_Keyspace::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyspaceMessageContents.Keyspace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyspaceMessageContents_Keyspace::CopyFrom(const KeyspaceMessageContents_Keyspace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyspaceMessageContents.Keyspace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyspaceMessageContents_Keyspace::IsInitialized() const {
  return true;
}

void KeyspaceMessageContents_Keyspace::InternalSwap(KeyspaceMessageContents_Keyspace* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(startid_, other->startid_);
  swap(endid_, other->endid_);
  swap(suffixbits_, other->suffixbits_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyspaceMessageContents_Keyspace::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void KeyspaceMessageContents::InitAsDefaultInstance() {
}
class KeyspaceMessageContents::_Internal {
 public:
};

KeyspaceMessageContents::KeyspaceMessageContents()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyspaceMessageContents)
}
KeyspaceMessageContents::KeyspaceMessageContents(const KeyspaceMessageContents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KeyspaceMessageContents)
}

void KeyspaceMessageContents::SharedCtor() {
}

KeyspaceMessageContents::~KeyspaceMessageContents() {
  // @@protoc_insertion_point(destructor:KeyspaceMessageContents)
  SharedDtor();
}

void KeyspaceMessageContents::SharedDtor() {
}

void KeyspaceMessageContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyspaceMessageContents& KeyspaceMessageContents::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeyspaceMessageContents_message_2eproto.base);
  return *internal_default_instance();
}


void KeyspaceMessageContents::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyspaceMessageContents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* KeyspaceMessageContents::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyspaceMessageContents::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KeyspaceMessageContents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyspaceMessageContents)
  return target;
}

size_t KeyspaceMessageContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyspaceMessageContents)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyspaceMessageContents::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyspaceMessageContents)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyspaceMessageContents* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyspaceMessageContents>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyspaceMessageContents)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyspaceMessageContents)
    MergeFrom(*source);
  }
}

void KeyspaceMessageContents::MergeFrom(const KeyspaceMessageContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyspaceMessageContents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void KeyspaceMessageContents::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyspaceMessageContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyspaceMessageContents::CopyFrom(const KeyspaceMessageContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyspaceMessageContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyspaceMessageContents::IsInitialized() const {
  return true;
}

void KeyspaceMessageContents::InternalSwap(KeyspaceMessageContents* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyspaceMessageContents::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageInfo::InitAsDefaultInstance() {
  ::_MessageInfo_default_instance_._instance.get_mutable()->timestamp_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::_MessageInfo_default_instance_.info_ = const_cast< ::InformationalMessageContents*>(
      ::InformationalMessageContents::internal_default_instance());
  ::_MessageInfo_default_instance_.keyspace_ = const_cast< ::KeyspaceMessageContents*>(
      ::KeyspaceMessageContents::internal_default_instance());
}
class MessageInfo::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& timestamp(const MessageInfo* msg);
  static const ::InformationalMessageContents& info(const MessageInfo* msg);
  static const ::KeyspaceMessageContents& keyspace(const MessageInfo* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
MessageInfo::_Internal::timestamp(const MessageInfo* msg) {
  return *msg->timestamp_;
}
const ::InformationalMessageContents&
MessageInfo::_Internal::info(const MessageInfo* msg) {
  return *msg->message_.info_;
}
const ::KeyspaceMessageContents&
MessageInfo::_Internal::keyspace(const MessageInfo* msg) {
  return *msg->message_.keyspace_;
}
void MessageInfo::clear_timestamp() {
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
}
void MessageInfo::set_allocated_info(::InformationalMessageContents* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    set_has_info();
    message_.info_ = info;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageInfo.info)
}
void MessageInfo::set_allocated_keyspace(::KeyspaceMessageContents* keyspace) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (keyspace) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      keyspace = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, keyspace, submessage_arena);
    }
    set_has_keyspace();
    message_.keyspace_ = keyspace;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageInfo.keyspace)
}
MessageInfo::MessageInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageInfo)
}
MessageInfo::MessageInfo(const MessageInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sourcenodeid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sourcenodeid().empty()) {
    sourcenodeid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sourcenodeid_);
  }
  destnodeid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_destnodeid().empty()) {
    destnodeid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.destnodeid_);
  }
  if (from._internal_has_timestamp()) {
    timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = nullptr;
  }
  ::memcpy(&lastreceivedmsg_, &from.lastreceivedmsg_,
    static_cast<size_t>(reinterpret_cast<char*>(&messagetype_) -
    reinterpret_cast<char*>(&lastreceivedmsg_)) + sizeof(messagetype_));
  clear_has_message();
  switch (from.message_case()) {
    case kInfo: {
      _internal_mutable_info()->::InformationalMessageContents::MergeFrom(from._internal_info());
      break;
    }
    case kKeyspace: {
      _internal_mutable_keyspace()->::KeyspaceMessageContents::MergeFrom(from._internal_keyspace());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:MessageInfo)
}

void MessageInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageInfo_message_2eproto.base);
  sourcenodeid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destnodeid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messagetype_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(messagetype_));
  clear_has_message();
}

MessageInfo::~MessageInfo() {
  // @@protoc_insertion_point(destructor:MessageInfo)
  SharedDtor();
}

void MessageInfo::SharedDtor() {
  sourcenodeid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destnodeid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete timestamp_;
  if (has_message()) {
    clear_message();
  }
}

void MessageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageInfo& MessageInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageInfo_message_2eproto.base);
  return *internal_default_instance();
}


void MessageInfo::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:MessageInfo)
  switch (message_case()) {
    case kInfo: {
      delete message_.info_;
      break;
    }
    case kKeyspace: {
      delete message_.keyspace_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void MessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sourcenodeid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destnodeid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
  ::memset(&lastreceivedmsg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messagetype_) -
      reinterpret_cast<char*>(&lastreceivedmsg_)) + sizeof(messagetype_));
  clear_message();
  _internal_metadata_.Clear();
}

const char* MessageInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes sourceNodeID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sourcenodeid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes destNodeID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_destnodeid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 lastReceivedMsg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          lastreceivedmsg_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MessageInfo.ChannelState channelState = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_channelstate(static_cast<::MessageInfo_ChannelState>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint64 messageID = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          messageid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MessageInfo.MessageType messageType = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_messagetype(static_cast<::MessageInfo_MessageType>(val));
        } else goto handle_unusual;
        continue;
      // .InformationalMessageContents info = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .KeyspaceMessageContents keyspace = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_keyspace(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes sourceNodeID = 1;
  if (this->sourcenodeid().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_sourcenodeid(), target);
  }

  // bytes destNodeID = 2;
  if (this->destnodeid().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_destnodeid(), target);
  }

  // uint32 lastReceivedMsg = 3;
  if (this->lastreceivedmsg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_lastreceivedmsg(), target);
  }

  // .MessageInfo.ChannelState channelState = 4;
  if (this->channelstate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_channelstate(), target);
  }

  // .google.protobuf.Timestamp timestamp = 5;
  if (this->has_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::timestamp(this), target, stream);
  }

  // sint64 messageID = 6;
  if (this->messageid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt64ToArray(6, this->_internal_messageid(), target);
  }

  // .MessageInfo.MessageType messageType = 7;
  if (this->messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_messagetype(), target);
  }

  // .InformationalMessageContents info = 8;
  if (_internal_has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::info(this), target, stream);
  }

  // .KeyspaceMessageContents keyspace = 9;
  if (_internal_has_keyspace()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::keyspace(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageInfo)
  return target;
}

size_t MessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes sourceNodeID = 1;
  if (this->sourcenodeid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sourcenodeid());
  }

  // bytes destNodeID = 2;
  if (this->destnodeid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_destnodeid());
  }

  // .google.protobuf.Timestamp timestamp = 5;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // uint32 lastReceivedMsg = 3;
  if (this->lastreceivedmsg() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lastreceivedmsg());
  }

  // .MessageInfo.ChannelState channelState = 4;
  if (this->channelstate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_channelstate());
  }

  // sint64 messageID = 6;
  if (this->messageid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt64Size(
        this->_internal_messageid());
  }

  // .MessageInfo.MessageType messageType = 7;
  if (this->messagetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  switch (message_case()) {
    // .InformationalMessageContents info = 8;
    case kInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.info_);
      break;
    }
    // .KeyspaceMessageContents keyspace = 9;
    case kKeyspace: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.keyspace_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageInfo)
    MergeFrom(*source);
  }
}

void MessageInfo::MergeFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sourcenodeid().size() > 0) {

    sourcenodeid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sourcenodeid_);
  }
  if (from.destnodeid().size() > 0) {

    destnodeid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.destnodeid_);
  }
  if (from.has_timestamp()) {
    _internal_mutable_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_timestamp());
  }
  if (from.lastreceivedmsg() != 0) {
    _internal_set_lastreceivedmsg(from._internal_lastreceivedmsg());
  }
  if (from.channelstate() != 0) {
    _internal_set_channelstate(from._internal_channelstate());
  }
  if (from.messageid() != 0) {
    _internal_set_messageid(from._internal_messageid());
  }
  if (from.messagetype() != 0) {
    _internal_set_messagetype(from._internal_messagetype());
  }
  switch (from.message_case()) {
    case kInfo: {
      _internal_mutable_info()->::InformationalMessageContents::MergeFrom(from._internal_info());
      break;
    }
    case kKeyspace: {
      _internal_mutable_keyspace()->::KeyspaceMessageContents::MergeFrom(from._internal_keyspace());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void MessageInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageInfo::CopyFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInfo::IsInitialized() const {
  return true;
}

void MessageInfo::InternalSwap(MessageInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  sourcenodeid_.Swap(&other->sourcenodeid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destnodeid_.Swap(&other->destnodeid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(lastreceivedmsg_, other->lastreceivedmsg_);
  swap(channelstate_, other->channelstate_);
  swap(messageid_, other->messageid_);
  swap(messagetype_, other->messagetype_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::InformationalMessageContents_CollectionInformationRecord_CreationRateData* Arena::CreateMaybeMessage< ::InformationalMessageContents_CollectionInformationRecord_CreationRateData >(Arena* arena) {
  return Arena::CreateInternal< ::InformationalMessageContents_CollectionInformationRecord_CreationRateData >(arena);
}
template<> PROTOBUF_NOINLINE ::InformationalMessageContents_CollectionInformationRecord* Arena::CreateMaybeMessage< ::InformationalMessageContents_CollectionInformationRecord >(Arena* arena) {
  return Arena::CreateInternal< ::InformationalMessageContents_CollectionInformationRecord >(arena);
}
template<> PROTOBUF_NOINLINE ::InformationalMessageContents* Arena::CreateMaybeMessage< ::InformationalMessageContents >(Arena* arena) {
  return Arena::CreateInternal< ::InformationalMessageContents >(arena);
}
template<> PROTOBUF_NOINLINE ::KeyspaceMessageContents_Keyspace* Arena::CreateMaybeMessage< ::KeyspaceMessageContents_Keyspace >(Arena* arena) {
  return Arena::CreateInternal< ::KeyspaceMessageContents_Keyspace >(arena);
}
template<> PROTOBUF_NOINLINE ::KeyspaceMessageContents* Arena::CreateMaybeMessage< ::KeyspaceMessageContents >(Arena* arena) {
  return Arena::CreateInternal< ::KeyspaceMessageContents >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageInfo* Arena::CreateMaybeMessage< ::MessageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::MessageInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
